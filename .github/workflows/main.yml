name: Deploy Fiber to GHCR

on:  
  workflow_dispatch:
    inputs:
      triggered_by:
        description: 'Who triggered the deployment?'
        required: false
        default: 'Manual Trigger'
  push:
    branches:
      - main


env:
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  VERSION: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env for Continuous Deploy
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image with Cache
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: [ self-hosted, deploy-golang-fiber ]

    steps:
      - name: Deploy to EC2 Server
        shell: bash
        run: |
          echo "Deploying Fiber..."

          cd /home/ec2-user/snack/go/fiber-app
          docker-compose down

          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ${{ env.DOCKER_IMAGE }}:latest

          docker image prune -f
          docker-compose up -d

          echo "Fiber deployed"
